<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Illusion Engine 01 - Preparation</title>
    <link href="/Preparation/"/>
    <url>/Preparation/</url>
    
    <content type="html"><![CDATA[<p>This article is aimed to do all the preparation work before coding. It includes the construction of the project structure, the configuration of the project, and the introduction to the thirdparty libraries.</p><h2 id="Creating-the-project"><a href="#Creating-the-project" class="headerlink" title="Creating the project"></a>Creating the project</h2><p>The recommended IDE is visual studio 2022. This project also works for Visual Studio 2017 and 2019. The test on other IDE hasn’t been done.</p><p>Create a static library as our engine project, so that it could be statically linked to our game application.</p><img src="/Preparation/IDE.png" class="" title="Visual Studio 2022"><p>This project would become our engine project. Other than that, we have to create an empty project in this solution which will become our game application.</p><p>Here I’ll name the engine project “Illusion”.</p><img src="/Preparation/Solution.png" class="" title="Illusion &amp; Game"><hr><h2 id="Project-Structure"><a href="#Project-Structure" class="headerlink" title="Project Structure"></a>Project Structure</h2><p>Game and Illusion could be included in a single folder, such as Root. In my own project, I included them in a folder called Collection. So the structure looks like:</p><img src="/Preparation/CollectionFolder.png" class="" title="The structure of Collection folder"><ul><li>Game<ul><li>The Game project, includes: src&#x2F;… folder, assets&#x2F;shaders&#x2F;… folder, and assets&#x2F;textures&#x2F;… folder.</li><li>The src folder contains all the source code for the game application</li><li>The shaders folder contains customized shaders and the textures folder contains all kinds of texture resources.</li></ul></li></ul><img src="/Preparation/GameFolder.png" class="" title="The Game Folder"><ul><li>Illusion<ul><li>The Illusion project, includes: Lib&#x2F;… folder, and src&#x2F;Engine&#x2F;… folder</li><li>In the src folder, the source code are seqerated into different folders base on their function, such as: Core, Event, Renderer, etc.</li><li>The content in the Lib folder would be explained in the ThirdParties part below.</li></ul></li></ul><img src="/Preparation/IllusionFolder.png" class="" title="The Illusion Folder"><ul><li>Lib<ul><li>The third party library or tools that is not neccessary for the Illusion Engine and Game Application, but is helpful when we build the whole project, such as premake, cmake, etc.</li><li>Either Illusion or Game could be excuted without the existance of premake, but premake could help us get rid of configuring the projet over and over again.</li></ul></li></ul><img src="/Preparation/LibFolder.png" class="" title="The Lib Folder"><ul><li>Scripts<ul><li>The bat files that calls premake or clean up the project.</li></ul></li></ul><img src="/Preparation/ScriptsFolder.png" class="" title="The Scripts Folder"><p>As a result, the final structure of the project looks like this:</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs gauss">Collection<br>├─Game<br>│  ├─assets<br>│  │  ├─shaders<br>│  │  └─textures<br>│  └─src<br>├─Illusion<br>│  ├─<span class="hljs-keyword">Lib</span><br>│  │  ├─Glad<br>│  │  ├─GLFW<br>│  │  ├─<span class="hljs-built_in">glm</span><br>│  │  ├─imgui<br>│  │  ├─spdlog<br>│  │  └─stb_image<br>│  └─src<br>│      └─Engine<br>│          ├─Core<br>│          │  ├─Application<br>│          │  ├─Input<br>│          │  ├─Layer<br>│          │  ├─<span class="hljs-built_in">Log</span><br>│          │  ├─Resource<br>│          │  ├─Utils<br>│          │  └─<span class="hljs-built_in">Window</span><br>│          ├─Event<br>│          ├─ImGui<br>│          └─Renderer<br>├─<span class="hljs-keyword">Lib</span><br>└─Scripts<br></code></pre></td></tr></table></figure><hr><h2 id="Thirparty-Libraries"><a href="#Thirparty-Libraries" class="headerlink" title="Thirparty Libraries"></a>Thirparty Libraries</h2><p>As of the time this article is published, the thirdparty library used in this project includes:</p><ul><li><a href="https://github.com/gabime/spdlog">SpdLog</a><ul><li>A fast C++ logging library.</li></ul></li><li><a href="https://github.com/glfw/glfw">GLFW</a><ul><li>GL Frame Work, a multi-platform library for OpenGL, OpenGL ES, Vulkan. Mainly used to handle input and window events.</li></ul></li><li><a href="https://github.com/Dav1dde/glad">Glad</a><ul><li>The dependency library for OpenGL, including API for OpenGL.</li></ul></li><li><a href="https://github.com/ocornut/imgui">ImGui</a><ul><li>A Bloat-free Graphical User interface for C++ with minimal dependencies. Used to build viewer and editer</li></ul></li><li><a href="https://github.com/g-truc/glm">glm</a><ul><li>A basic math library, including vector, matrix, and some other common math components.</li></ul></li><li><a href="https://github.com/premake/premake-core">Premake</a><ul><li>A command line utility which reads a scripted definition of a software project, then uses it to perform build configuration tasks or generate project files.</li></ul></li></ul><p>All of these libraries could be found on Github. You could click on the name of the library to jump to their pages on Github.</p><p>SpdLog, GLFW, Glad, ImGui, and glm are included in Collection&#x2F;Illusion&#x2F;Lib… folder.</p><img src="/Preparation/IllusionLib.png" class="" title="Thirdparty Libraries"><p>Pramake is included in Collection&#x2F;Lib&#x2F;… folder.</p><hr><h2 id="Configurations"><a href="#Configurations" class="headerlink" title="Configurations"></a>Configurations</h2><p>Since we have premake, we could add configuration file for our projects.</p><p>Inside Collection&#x2F;… folder, create a file called “prameke” and revise its extension to “.lua”.</p><p>In premake.lua, enter code:</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-comment">-- Set up workspace, this would work for every project</span><br>workspace <span class="hljs-string">&quot;Project&quot;</span><br>architecture <span class="hljs-string">&quot;x64&quot;</span><br><span class="hljs-comment">-- Set the starting project to be Game</span><br>startproject <span class="hljs-string">&quot;Game&quot;</span><br><span class="hljs-comment">-- Define Build Configuration</span><br>configurations<br>&#123;<br><span class="hljs-string">&quot;Debug&quot;</span>,<br><span class="hljs-string">&quot;Release&quot;</span>,<br><span class="hljs-string">&quot;Dist&quot;</span><br>&#125;<br><span class="hljs-comment">-- Set the outputfile format to be like &quot;Debug-Windows-x86_64&quot;</span><br>outputdir = <span class="hljs-string">&quot;%&#123;cfg.buildcfg&#125;-%&#123;cfg.system&#125;-%&#123;cfg.architecture&#125;&quot;</span><br><span class="hljs-comment">-- Include directories relative to root folder (solution directory)</span><br>IncludeDir = &#123;&#125;<br>IncludeDir[<span class="hljs-string">&quot;GLFW&quot;</span>] = <span class="hljs-string">&quot;Illusion/Lib/GLFW/include&quot;</span><br>IncludeDir[<span class="hljs-string">&quot;Glad&quot;</span>] = <span class="hljs-string">&quot;Illusion/Lib/Glad/include&quot;</span><br>IncludeDir[<span class="hljs-string">&quot;ImGui&quot;</span>] = <span class="hljs-string">&quot;Illusion/Lib/imgui&quot;</span><br>IncludeDir[<span class="hljs-string">&quot;glm&quot;</span>] = <span class="hljs-string">&quot;Illusion/Lib/glm&quot;</span><br>IncludeDir[<span class="hljs-string">&quot;stb_image&quot;</span>] = <span class="hljs-string">&quot;Illusion/Lib/stb_image&quot;</span><br><span class="hljs-comment">-- Include these folders to load the configuration files at those positions</span><br>include <span class="hljs-string">&quot;Illusion/Lib/GLFW&quot;</span><br>include <span class="hljs-string">&quot;Illusion/Lib/Glad&quot;</span><br>include <span class="hljs-string">&quot;Illusion/Lib/imgui&quot;</span><br><span class="hljs-comment">-- Define Illusion Project, set the relative path, set the kind to be static library, and set the language</span><br>project <span class="hljs-string">&quot;Illusion&quot;</span><br>location <span class="hljs-string">&quot;Illusion&quot;</span><br>kind <span class="hljs-string">&quot;StaticLib&quot;</span><br>language <span class="hljs-string">&quot;C++&quot;</span><br>cppdialect <span class="hljs-string">&quot;C++17&quot;</span><br>staticruntime <span class="hljs-string">&quot;on&quot;</span><br><span class="hljs-comment">-- Set the output path and intermediate path</span><br>targetdir (<span class="hljs-string">&quot;bin/&quot;</span> .. outputdir .. <span class="hljs-string">&quot;/%&#123;prj.name&#125;&quot;</span>)<br>objdir (<span class="hljs-string">&quot;bin-int/&quot;</span> .. outputdir .. <span class="hljs-string">&quot;/%&#123;prj.name&#125;&quot;</span>)<br><span class="hljs-comment">-- Define the precompile header</span><br>pchheader <span class="hljs-string">&quot;pch.h&quot;</span><br>pchsource <span class="hljs-string">&quot;Illusion/src/pch.cpp&quot;</span><br><span class="hljs-comment">-- Define files that would be compiled</span><br>files<br>&#123;<br><span class="hljs-string">&quot;%&#123;prj.name&#125;/src/**.h&quot;</span>,<br><span class="hljs-string">&quot;%&#123;prj.name&#125;/src/**.cpp&quot;</span>,<br><span class="hljs-string">&quot;%&#123;prj.name&#125;/Lib/stb_image/**.h&quot;</span>,<br><span class="hljs-string">&quot;%&#123;prj.name&#125;/Lib/stb_image/**.cpp&quot;</span>,<br><span class="hljs-string">&quot;%&#123;prj.name&#125;/Lib/glm/glm/**.hpp&quot;</span>,<br><span class="hljs-string">&quot;%&#123;prj.name&#125;/Lib/glm/glm/**.inl&quot;</span>,<br>&#125;<br><span class="hljs-comment">-- Preprocess macros</span><br>defines<br>&#123;<br><span class="hljs-string">&quot;_CRT_SECURE_NO_WARNINGS&quot;</span><br>&#125;<br><span class="hljs-comment">-- Define include path</span><br>includedirs<br>&#123;<br><span class="hljs-string">&quot;%&#123;prj.name&#125;/src&quot;</span>,<br><span class="hljs-string">&quot;%&#123;prj.name&#125;/Lib/spdlog/include&quot;</span>,<br><span class="hljs-string">&quot;%&#123;IncludeDir.GLFW&#125;&quot;</span>,<br><span class="hljs-string">&quot;%&#123;IncludeDir.Glad&#125;&quot;</span>,<br><span class="hljs-string">&quot;%&#123;IncludeDir.ImGui&#125;&quot;</span>,<br><span class="hljs-string">&quot;%&#123;IncludeDir.glm&#125;&quot;</span>,<br><span class="hljs-string">&quot;%&#123;IncludeDir.stb_image&#125;&quot;</span><br>&#125;<br><span class="hljs-comment">-- Link these library to the project</span><br>links <br>&#123; <br><span class="hljs-string">&quot;GLFW&quot;</span>,<br><span class="hljs-string">&quot;Glad&quot;</span>,<br><span class="hljs-string">&quot;ImGui&quot;</span>,<br><span class="hljs-string">&quot;opengl32.lib&quot;</span><br>&#125;<br><span class="hljs-comment">-- Define some macros for different build options</span><br>filter <span class="hljs-string">&quot;system:windows&quot;</span><br>systemversion <span class="hljs-string">&quot;latest&quot;</span><br><br>defines<br>&#123;<br><span class="hljs-string">&quot;ILLUSION_PLATFORM_WINDOWS&quot;</span>,<br><span class="hljs-string">&quot;ILLUSION_BUILD_DLL&quot;</span>,<br><span class="hljs-string">&quot;GLFW_INCLUDE_NONE&quot;</span><br>&#125;<br><br>filter <span class="hljs-string">&quot;configurations:Debug&quot;</span><br>defines <span class="hljs-string">&quot;ILLUSION_DEBUG&quot;</span><br>runtime <span class="hljs-string">&quot;Debug&quot;</span><br>symbols <span class="hljs-string">&quot;on&quot;</span><br><br>filter <span class="hljs-string">&quot;configurations:Release&quot;</span><br>defines <span class="hljs-string">&quot;ILLUSION_RELEASE&quot;</span><br>runtime <span class="hljs-string">&quot;Release&quot;</span><br>optimize <span class="hljs-string">&quot;on&quot;</span><br><br>filter <span class="hljs-string">&quot;configurations:Dist&quot;</span><br>defines <span class="hljs-string">&quot;ILLUSION_DIST&quot;</span><br>runtime <span class="hljs-string">&quot;Release&quot;</span><br>optimize <span class="hljs-string">&quot;on&quot;</span><br><span class="hljs-comment">-- Define Game Project</span><br>project <span class="hljs-string">&quot;Game&quot;</span><br>location <span class="hljs-string">&quot;Game&quot;</span><br>kind <span class="hljs-string">&quot;ConsoleApp&quot;</span><br>language <span class="hljs-string">&quot;C++&quot;</span><br>cppdialect <span class="hljs-string">&quot;C++17&quot;</span><br>staticruntime <span class="hljs-string">&quot;on&quot;</span><br><span class="hljs-comment">-- Set the output path and intermediate path</span><br>targetdir (<span class="hljs-string">&quot;bin/&quot;</span> .. outputdir .. <span class="hljs-string">&quot;/%&#123;prj.name&#125;&quot;</span>)<br>objdir (<span class="hljs-string">&quot;bin-int/&quot;</span> .. outputdir .. <span class="hljs-string">&quot;/%&#123;prj.name&#125;&quot;</span>)<br><span class="hljs-comment">-- Define files that would be compiled</span><br>files<br>&#123;<br><span class="hljs-string">&quot;%&#123;prj.name&#125;/src/**.h&quot;</span>,<br><span class="hljs-string">&quot;%&#123;prj.name&#125;/src/**.cpp&quot;</span><br>&#125;<br><span class="hljs-comment">-- Define include path</span><br>includedirs<br>&#123;<br><span class="hljs-string">&quot;Illusion/Lib/spdlog/include&quot;</span>,<br><span class="hljs-string">&quot;Illusion/src&quot;</span>,<br><span class="hljs-string">&quot;Illusion/Lib&quot;</span>,<br><span class="hljs-string">&quot;%&#123;IncludeDir.glm&#125;&quot;</span><br>&#125;<br><span class="hljs-comment">-- Link the engine to the project</span><br>links<br>&#123;<br><span class="hljs-string">&quot;Illusion&quot;</span><br>&#125;<br><span class="hljs-comment">-- Define some macros for different build options</span><br>filter <span class="hljs-string">&quot;system:windows&quot;</span><br>systemversion <span class="hljs-string">&quot;latest&quot;</span><br><br>defines<br>&#123;<br><span class="hljs-string">&quot;ILLUSION_PLATFORM_WINDOWS&quot;</span><br>&#125;<br><br>filter <span class="hljs-string">&quot;configurations:Debug&quot;</span><br>defines <span class="hljs-string">&quot;ILLUSION_DEBUG&quot;</span><br>runtime <span class="hljs-string">&quot;Debug&quot;</span><br>symbols <span class="hljs-string">&quot;on&quot;</span><br><br>filter <span class="hljs-string">&quot;configurations:Release&quot;</span><br>defines <span class="hljs-string">&quot;ILLUSION_RELEASE&quot;</span><br>runtime <span class="hljs-string">&quot;Release&quot;</span><br>optimize <span class="hljs-string">&quot;on&quot;</span><br><br>filter <span class="hljs-string">&quot;configurations:Dist&quot;</span><br>defines <span class="hljs-string">&quot;ILLUSION_DIST&quot;</span><br>runtime <span class="hljs-string">&quot;Release&quot;</span><br>optimize <span class="hljs-string">&quot;on&quot;</span><br></code></pre></td></tr></table></figure><p>Additionally, since we have to build those thirdparty libraries, they also need their own configuration files.</p><p>Inside Collection&#x2F;Illusion&#x2F;Lib&#x2F;GLFW&#x2F;… folder, create a file called “premake.lua”, and enter code:</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs lua">project <span class="hljs-string">&quot;GLFW&quot;</span><br>    kind <span class="hljs-string">&quot;StaticLib&quot;</span><br>    language <span class="hljs-string">&quot;C&quot;</span><br>targetdir (<span class="hljs-string">&quot;bin/&quot;</span> .. outputdir .. <span class="hljs-string">&quot;/%&#123;prj.name&#125;&quot;</span>)<br>    objdir (<span class="hljs-string">&quot;bin-int/&quot;</span> .. outputdir .. <span class="hljs-string">&quot;/%&#123;prj.name&#125;&quot;</span>)<br>files<br>&#123;<br>        <span class="hljs-string">&quot;include/GLFW/glfw3.h&quot;</span>,<br>        <span class="hljs-string">&quot;include/GLFW/glfw3native.h&quot;</span>,<br>        <span class="hljs-string">&quot;src/glfw_config.h&quot;</span>,<br>        <span class="hljs-string">&quot;src/context.c&quot;</span>,<br>        <span class="hljs-string">&quot;src/init.c&quot;</span>,<br>        <span class="hljs-string">&quot;src/input.c&quot;</span>,<br>        <span class="hljs-string">&quot;src/monitor.c&quot;</span>,<br>        <span class="hljs-string">&quot;src/vulkan.c&quot;</span>,<br>        <span class="hljs-string">&quot;src/window.c&quot;</span><br>    &#125;<br>filter <span class="hljs-string">&quot;system:windows&quot;</span><br>        systemversion <span class="hljs-string">&quot;latest&quot;</span><br>        staticruntime <span class="hljs-string">&quot;on&quot;</span><br>        files<br>        &#123;<br>            <span class="hljs-string">&quot;src/win32_init.c&quot;</span>,<br>            <span class="hljs-string">&quot;src/win32_joystick.c&quot;</span>,<br>            <span class="hljs-string">&quot;src/win32_monitor.c&quot;</span>,<br>            <span class="hljs-string">&quot;src/win32_time.c&quot;</span>,<br>            <span class="hljs-string">&quot;src/win32_thread.c&quot;</span>,<br>            <span class="hljs-string">&quot;src/win32_window.c&quot;</span>,<br>            <span class="hljs-string">&quot;src/wgl_context.c&quot;</span>,<br>            <span class="hljs-string">&quot;src/egl_context.c&quot;</span>,<br>            <span class="hljs-string">&quot;src/osmesa_context.c&quot;</span><br>        &#125;<br>defines <br>&#123; <br>            <span class="hljs-string">&quot;_GLFW_WIN32&quot;</span>,<br>            <span class="hljs-string">&quot;_CRT_SECURE_NO_WARNINGS&quot;</span><br>&#125;<br>    filter &#123; <span class="hljs-string">&quot;system:windows&quot;</span>, <span class="hljs-string">&quot;configurations:Release&quot;</span> &#125;<br>        buildoptions <span class="hljs-string">&quot;/MT&quot;</span><br></code></pre></td></tr></table></figure><p>Inside Collection&#x2F;Illusion&#x2F;Lib&#x2F;Glad&#x2F;… folder, create a file called “premake.lua”, and enter code:</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs lua">project <span class="hljs-string">&quot;Glad&quot;</span><br>    kind <span class="hljs-string">&quot;StaticLib&quot;</span><br>    language <span class="hljs-string">&quot;C&quot;</span><br>    staticruntime <span class="hljs-string">&quot;on&quot;</span><br>    targetdir (<span class="hljs-string">&quot;bin/&quot;</span> .. outputdir .. <span class="hljs-string">&quot;/%&#123;prj.name&#125;&quot;</span>)<br>    objdir (<span class="hljs-string">&quot;bin-int/&quot;</span> .. outputdir .. <span class="hljs-string">&quot;/%&#123;prj.name&#125;&quot;</span>)<br>    files<br>    &#123;<br>        <span class="hljs-string">&quot;include/glad/glad.h&quot;</span>,<br>        <span class="hljs-string">&quot;include/KHR/khrplatform.h&quot;</span>,<br>        <span class="hljs-string">&quot;src/glad.c&quot;</span><br>    &#125;<br>    includedirs<br>    &#123;<br>        <span class="hljs-string">&quot;include&quot;</span><br>    &#125;<br>    filter <span class="hljs-string">&quot;system:windows&quot;</span><br>        systemversion <span class="hljs-string">&quot;latest&quot;</span><br>    filter <span class="hljs-string">&quot;configurations:Debug&quot;</span><br>        runtime <span class="hljs-string">&quot;Debug&quot;</span><br>        symbols <span class="hljs-string">&quot;on&quot;</span><br>    filter <span class="hljs-string">&quot;configurations:Release&quot;</span><br>        runtime <span class="hljs-string">&quot;Release&quot;</span><br>        optimize <span class="hljs-string">&quot;on&quot;</span><br></code></pre></td></tr></table></figure><p>Inside Collection&#x2F;Illusion&#x2F;Lib&#x2F;ImGui&#x2F;… folder, create a file called “premake.lua”, and enter code:</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs lua">project <span class="hljs-string">&quot;ImGui&quot;</span><br>    kind <span class="hljs-string">&quot;StaticLib&quot;</span><br>    language <span class="hljs-string">&quot;C++&quot;</span><br>    cppdialect <span class="hljs-string">&quot;C++17&quot;</span><br>    targetdir (<span class="hljs-string">&quot;bin/&quot;</span> .. outputdir .. <span class="hljs-string">&quot;/%&#123;prj.name&#125;&quot;</span>)<br>    objdir (<span class="hljs-string">&quot;bin-int/&quot;</span> .. outputdir .. <span class="hljs-string">&quot;/%&#123;prj.name&#125;&quot;</span>)<br>    files<br>    &#123;<br>        <span class="hljs-string">&quot;imconfig.h&quot;</span>,<br>        <span class="hljs-string">&quot;imgui.h&quot;</span>,<br>        <span class="hljs-string">&quot;imgui.cpp&quot;</span>,<br>        <span class="hljs-string">&quot;imgui_draw.cpp&quot;</span>,<br>        <span class="hljs-string">&quot;imgui_internal.h&quot;</span>,<br>        <span class="hljs-string">&quot;imgui_widgets.cpp&quot;</span>,<br>        <span class="hljs-string">&quot;imstb_rectpack.h&quot;</span>,<br>        <span class="hljs-string">&quot;imstb_textedit.h&quot;</span>,<br>        <span class="hljs-string">&quot;imstb_truetype.h&quot;</span>,<br>        <span class="hljs-string">&quot;imgui_demo.cpp&quot;</span><br>    &#125;<br>    filter <span class="hljs-string">&quot;system:windows&quot;</span><br>        systemversion <span class="hljs-string">&quot;latest&quot;</span><br>        staticruntime <span class="hljs-string">&quot;on&quot;</span><br>    filter &#123; <span class="hljs-string">&quot;system:windows&quot;</span>, <span class="hljs-string">&quot;configurations:Release&quot;</span> &#125;<br>        buildoptions <span class="hljs-string">&quot;/MT&quot;</span><br></code></pre></td></tr></table></figure><p>After this, the configuration information for the whole project is recorded. In order to build the project, we only have to call premake5 and tell it the toolset that we are using:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt; Lib/Premake5/Premake5.exe vs2022<br></code></pre></td></tr></table></figure><p>To simplifie this procedure, we need a bat file inside Collection&#x2F;Scripts&#x2F;… folder.</p><p>Inside Build.bat, enter code:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">@<span class="hljs-built_in">echo</span> off<br><span class="hljs-built_in">pushd</span> C:<br><span class="hljs-built_in">cd</span> Program Files (x86)\Microsoft Visual Studio\Installer<br><span class="hljs-keyword">for</span> /f <span class="hljs-string">&quot;delims=&quot;</span> %%t <span class="hljs-keyword">in</span> (<span class="hljs-string">&#x27;vswhere.exe -property catalog_productLineVersion&#x27;</span>) <span class="hljs-keyword">do</span> <span class="hljs-built_in">set</span> version=%%t<br><span class="hljs-built_in">popd</span><br><span class="hljs-built_in">cd</span> ..\<br>call Lib\premake5\Premake5.exe vs%version%<br>PAUSE<br></code></pre></td></tr></table></figure><p>This file would figure out the version of visual studio installed on this device and pass it to premake to generate the correct version of project files such as .vs, .sln, .vcproj, etc.</p><p>Inside Clear.bat, enter code:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ..\<br>rd /s /q .vs<br>rd /s /q bin<br>rd /s /q bin-int<br>del /a Project.sln<br>del /a /s *.vcxproj.*<br><span class="hljs-built_in">pushd</span> Illusion\Lib\Glad<br>rd /s /q bin<br>rd /s /q bin-int<br><span class="hljs-built_in">popd</span><br><span class="hljs-built_in">pushd</span> Illusion\Lib\GLFW<br>rd /s /q bin<br>rd /s /q bin-int<br><span class="hljs-built_in">popd</span><br><span class="hljs-built_in">pushd</span> Illusion\Lib\imgui<br>rd /s /q bin<br>rd /s /q bin-int<br><span class="hljs-built_in">popd</span><br>PAUSE<br></code></pre></td></tr></table></figure><p>This file would delete all the project files, including .vs, .sln, .vcproj, etc. Only source code would be left. It is a tool that help us clean up the project and save space.</p><p>Thus, by running Build.bat and Clear.bat, we could easily generate or clean up the project.</p><img src="/Preparation/Build.png" class="" title="Build.bat Running Result"><img src="/Preparation/Clear.png" class="" title="Clear.bat Running Result"><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>So far, we have completed the configuration of the entire project. We stored the configuration information in premake.lua, and handed over the creation and cleaning of the project to the batch files to complete. By doing so, we don’t have to configure the project and struggle with the include problem over and over again.</p>]]></content>
    
    
    <categories>
      
      <category>Game Engine</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Original</tag>
      
      <tag>C++</tag>
      
      <tag>Game Development</tag>
      
      <tag>Computer Graphics</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
